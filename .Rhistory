knitr::opts_chunk$set(echo = FALSE)
library(terra)
library(mapview)
library(sf)
library(unmarked)
library(tidyverse)
install.packages("geodata")
library(geodata)
library(readxl)
tabla <- read_excel("data/tabla.xlsx",
sheet = "Ardilla", skip = 2)
# View(tabla)
elev <- elevation_3s(lon, lat )
View(tabla)
tabla <- read_excel("data/tabla.xlsx",
sheet = "Ardilla", skip = 2, na = "X")
View(tabla)
names(tabla)
puntos <- vect(tabla, geom=c("long", "lat"), crs="4326", keepgeom=FALSE)
puntos <- vect(tabla, geom=c("long", "lat"), crs="4326")
puntos <- vect(tabla, geom=c("long", "lat"), crs="EPSG:4326")
library(leaflet)
leaflet(sf::st_as_sf(puntos)) %>%
addTiles() %>%
addPolygons(fillOpacity=0.1)
leaflet(sf::st_as_sf(puntos)) %>%
addTiles() %>%
addPoints(fillOpacity=0.1)
leaflet(sf::st_as_sf(puntos)) %>%
addTiles() %>%
addMarkers(puntos, popup = ~as.character(mag), label = ~as.character(mag))
leaflet(sf::st_as_sf(puntos)) %>%
addTiles() %>%
addMarkers(~long, ~lat, popup = ~as.character(mag), label = ~as.character(mag))
leaflet(sf::st_as_sf(puntos)) %>%
addTiles() %>%
addMarkers(popup = ~as.character(mag), label = ~as.character(mag))
leaflet(sf::st_as_sf(puntos)) %>%
addTiles() %>%
addMarkers()
library(leaflet)
leaflet(sf::st_as_sf(puntos)) %>%
addTiles() %>%
addCircleMarkers()
rownames(tabla)
View(tabla)
# library(leaflet)
# leaflet(sf::st_as_sf(puntos)) %>%
#    addTiles() %>%
#   addCircleMarkers()
mapview(sf::st_as_sf(puntos))
# library(leaflet)
# leaflet(sf::st_as_sf(puntos)) %>%
#    addTiles() %>%
#   addCircleMarkers()
mapview(sf::st_as_sf(puntos),
map.types = c("Esri_WorldImagery", "Esri.WorldShadedRelief"))
mapview(sf::st_as_sf(puntos),
# map.types = c("Esri_WorldImagery", "Esri.WorldShadedRelief")
)
mapview(sf::st_as_sf(puntos) #,
# map.types = c("Esri_WorldImagery", "Esri.WorldShadedRelief")
)
plot (puntos)
tabla
View(tabla)
# elliminar filas 12, 13, 14
tabla <- tabla (c(-14,-13,-12),)
# elliminar filas 12, 13, 14
tabla <- tabla(c(-14,-13,-12),)
tabla(13,1)
# elliminar filas 12, 13, 14
tabla <- tabla[c(-14,-13,-12),]
# View(tabla)
# for terra
puntos <- vect(tabla, geom=c("long", "lat"), crs="EPSG:4326")
# convierte a sf
puntos_sf <- sf::st_as_sf(puntos)
mapview(puntos_sf,
map.types = c("EsriWorldImagery", "Esri.WorldShadedRelief")
)
mapview(puntos_sf,
map.types = c("Esri.WorldImagery", "Esri.WorldShadedRelief")
)
tabla <- read_excel("data/tabla.xlsx",
sheet = "Ardilla", skip = 2, na = "X")
# elliminar filas 12, 13, 14
tabla <- tabla[c(-14,-13,-12),]
# View(tabla)
# convierte a terra
puntos <- vect(tabla, geom=c("long", "lat"), crs="EPSG:4326")
# convierte a sf
puntos_sf <- sf::st_as_sf(puntos)
# library(leaflet)
# leaflet(sf::st_as_sf(puntos)) %>%
#    addTiles() %>%
#   addCircleMarkers()
mapview(puntos_sf #,
#map.types = c("Esri.WorldImagery", "Esri.WorldShadedRelief")
)
# centroide for terra
centoide <- centroids(puntos)
centoide
altitud <- elevation_3s(centoide)
# centroide for terra
centoide <- centroids(puntos, path="data")
# centroide for terra
centoide <- centroids(puntos, path="data/")
altitud <- elevation_3s(centoide, path="data")
# centroide for terra
centoide <- centroids(puntos)
altitud <- elevation_3s(centoide, path="data")
centoide
as.data.frame(centroide)
plot(centoide)
# centroide for terra
centoide <- centroids(puntos)
plot(centoide)
centroids(puntos)
# centroide for terra
centoide <- centroids(puntos, TRUE)
altitud <- elevation_3s(7,664081007	-72,893262, path="data")
altitud <- elevation_3s(-72.893262, 7.664081007, path="data")
altitud <- elevation_3s(-72.893262, 7.664081007)
altitud <- elevation_3s(-72.893262, 7.664081007, path="data")
altitud <- elevation(-72.893262, 7.664081007, path="data")
altitud <- elevation_global(-72.893262, 7.664081007, path="data")
altitud <- elevation_global(-72.893262, 7.664081007, path="data", res=0.5)
altitud <- elevation_3s(-72.893262, 7.664081007, path="data")
# centroide for terra
# centoide <- centroids(puntos, TRUE)
centroide <- c(mean(tabla$long), mean(tabla$lat))
srtm <- raster::getData('SRTM', lon=centroide[1], lat=centroide[2])
library(raster)
srtm <- raster::getData('SRTM', lon=centroide[1], lat=centroide[2])
centoide <- centroids(puntos, TRUE)
centoide
library(raster)
knitr::opts_chunk$set(echo = FALSE)
tabla <- read_excel("data/tabla.xlsx",
sheet = "Ardilla", skip = 2, na = "X")
library(terra)
library(mapview)
library(sf)
library(unmarked)
library(tidyverse)
library(geodata)
library(readxl)
tabla <- read_excel("data/tabla.xlsx",
sheet = "Ardilla", skip = 2, na = "X")
# elliminar filas 12, 13, 14
tabla <- tabla[c(-14,-13,-12),]
# View(tabla)
# convierte a terra
puntos <- vect(tabla, geom=c("long", "lat"), crs="EPSG:4326")
# convierte a sf
puntos_sf <- sf::st_as_sf(puntos)
# centroide for terra
# centoide <- centroids(puntos, TRUE)
centroide <- c(mean(tabla$long), mean(tabla$lat))
clip_window <- extent(-72.92054, -72.88748, 7.647007, 7.673781)
bb <- c(-72.92054, -72.88748, 7.647007, 7.673781)
srtm <- raster::getData('SRTM', lon=centroide[1], lat=centroide[2])
srtm <- raster::getData('SRTM', lon=centroide[1], lat=centroide[2])
srtm <- raster::getData('SRTM', lon=centroide[1], lat=centroide[2])
altitud <- rast("srtm_22_11.tif")
altitud <- rast("D:/BoxFiles/Box Sync/CodigoR/Tesistas/srtm_22_11.tif")
# crop the  raster using the vector extent
srtm_crop <- crop(srtm, clip_window)
# crop the  raster using the vector extent
srtm_crop <- crop(altitud, clip_window)
# elevation.crop and terrain covs
elevation <- srtm_crop
slope<-terrain(srtm_crop, opt="slope", unit='degrees', neighbors=8)
aspect<-terrain(srtm_crop, opt="aspect", unit='degrees', neighbors=8)
roughness <- terrain(srtm_crop, opt = c("roughness"))
slope<-terrain(srtm_crop, opt="slope", unit='degrees', neighbors=8)
slope<-raster::terrain(srtm_crop, opt="slope", unit='degrees', neighbors=8)
aspect<-raster::terrain(srtm_crop, opt="aspect", unit='degrees', neighbors=8)
roughness <- raster::terrain(srtm_crop, opt = c("roughness"))
elevation <- getData('alt', country='CHE')
x <- terrain(elevation, opt=c('slope', 'aspect'), unit='degrees')
plot(x)
install.packages("raster")
install.packages("raster")
